## 601. huam traffic stadium
Table: Stadium

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| visit_date    | date    |
| people        | int     |
+---------------+---------+
visit_date is the column with unique values for this table.
Each row of this table contains the visit date and visit id to the stadium with the number of people during the visit.
As the id increases, the date increases as well.
 

Write a solution to display the records with three or more rows with consecutive id's, and the number of people is greater than or equal to 100 for each.

Return the result table ordered by visit_date in ascending order.

The result format is in the following example.
SOLUTION : WITH eligible_visits AS (
    SELECT *
    FROM Stadium
    WHERE people >= 100
),
grouped_visits AS (
    SELECT *,
           id - ROW_NUMBER() OVER (ORDER BY id) AS grp
    FROM eligible_visits
),
filtered_groups AS (
    SELECT grp
    FROM grouped_visits
    GROUP BY grp
    HAVING COUNT(*) >= 3
)
SELECT gv.id, gv.visit_date, gv.people
FROM grouped_visits gv
JOIN filtered_groups fg
ON gv.grp = fg.grp
ORDER BY gv.visit_date;
